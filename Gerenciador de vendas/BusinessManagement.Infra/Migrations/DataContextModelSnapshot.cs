// <auto-generated />
using System;
using BusinessManagement.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessManagement.Infra.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Atendimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Nota")
                        .HasColumnType("real");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusAtendimento")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VendedorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("VendedorId");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Desciçao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.MicroRegiao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegiaoId")
                        .HasColumnType("int");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoId");

                    b.ToTable("MicroRegioes");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Regiao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RegiaoVendedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoVendedorId");

                    b.ToTable("Regioes");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.RegiaoVendedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("VendedorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RegiaoVendedores");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Vendedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RegiaoVendedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RegiaoVendedorId");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Atendimento", b =>
                {
                    b.HasOne("BusinessManagement.Domain.Entities.Empresa", "Empresa")
                        .WithMany("Atendimentos")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessManagement.Domain.Entities.Vendedor", "Vendedor")
                        .WithMany("Atendimentos")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Vendedor");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.MicroRegiao", b =>
                {
                    b.HasOne("BusinessManagement.Domain.Entities.Regiao", "Regiao")
                        .WithMany("MicroRegions")
                        .HasForeignKey("RegiaoId");

                    b.Navigation("Regiao");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Regiao", b =>
                {
                    b.HasOne("BusinessManagement.Domain.Entities.RegiaoVendedor", null)
                        .WithMany("Regioes")
                        .HasForeignKey("RegiaoVendedorId");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Vendedor", b =>
                {
                    b.HasOne("BusinessManagement.Domain.Entities.RegiaoVendedor", "RegiaoVendedor")
                        .WithMany("Vendedores")
                        .HasForeignKey("RegiaoVendedorId");

                    b.Navigation("RegiaoVendedor");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Empresa", b =>
                {
                    b.Navigation("Atendimentos");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Regiao", b =>
                {
                    b.Navigation("MicroRegions");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.RegiaoVendedor", b =>
                {
                    b.Navigation("Regioes");

                    b.Navigation("Vendedores");
                });

            modelBuilder.Entity("BusinessManagement.Domain.Entities.Vendedor", b =>
                {
                    b.Navigation("Atendimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
